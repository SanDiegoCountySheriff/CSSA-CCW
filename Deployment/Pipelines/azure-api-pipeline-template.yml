parameters:
    - name: azureSubscriptionConnection
      type: string
    - name: environment
      type: string
    - name: backendsvc
      type: string
    - name: backendsuffix
      type: string
    - name: webAppSuffix
      type: string
    - name: webAppPrefix
      type: string
    - name: rgPrefix
      type: string
    - name: rgEnvironment
      type: string

stages:
    - stage: "Build"
      displayName: "Build"
      jobs:
          - deployment: "Build_API"
            variables:
                projectToBuild: $(Build.SourcesDirectory)/API/CCW.${{ parameters.backendsvc }}/CCW.${{ parameters.backendsvc }}.sln
            environment: ApprovalNotRequired

            strategy:
                runOnce:
                    deploy:
                        steps:
                            - checkout: self
                              displayName: "Branch Checkout"
                              persistCredentials: true
                              fetchDepth: 2

                            - task: UseDotNet@2
                              displayName: "Use .NET sdk 6.x"
                              inputs:
                                  packageType: sdk
                                  version: 6.x

                            - task: DotNetCoreCLI@2
                              displayName: "dotnet restore"
                              inputs:
                                  command: restore
                                  projects: ${{ variables.projectToBuild }}

                            - task: DotNetCoreCLI@2
                              displayName: Build project
                              inputs:
                                  projects: ${{ variables.projectToBuild }}
                                  arguments: --output publish_output --configuration Release

                            - task: ArchiveFiles@2
                              displayName: "Archive files"
                              inputs:
                                  rootFolderOrFile: "publish_output/"
                                  includeRootFolder: false
                                  archiveType: "zip"
                                  archiveFile: "$(Build.ArtifactStagingDirectory)/${{ lower(parameters.backendsvc) }}-api.zip"
                                  replaceExistingArchive: true

                            - task: PublishBuildArtifacts@1
                              displayName: "Publish Artifacts"
                              inputs:
                                  PathtoPublish: "$(Build.ArtifactStagingDirectory)"
                                  ArtifactName: "drop"
                                  publishLocation: "Container"

    - stage:
      jobs:
          - job: Deploy
            displayName: "Deploy"
            variables:
                artifactPath: "$(System.ArtifactsDirectory)/${{ lower(parameters.backendsvc) }}-api.zip"
                webAppName: "$(webAppPrefix)-${{ lower(parameters.environment) }}-${{ lower(parameters.backendsvc) }}-${{ lower(parameters.webAppSuffix) }}"
                resourceGroupName: "$(rgPrefix)-$(rgEnvironment)-${{ lower(parameters.backendsuffix) }}"

            steps:
                - task: AzureCLI@2
                  displayName: "Add agent ip address to function network restrictions"
                  inputs:
                      azureSubscription: ${{ parameters.azureSubscriptionConnection }}
                      scriptType: ps
                      scriptLocation: inlineScript
                      inlineScript: |
                          if ('${{ parameters.environment }}' -eq 'p' -or '${{ parameters.environment }}' -eq 'uat') {
                            $ErrorActionPreference = "Stop"
                                          
                            Write-Host "Installing Az.Resources"
                            Install-Module Az.Resources -Repository PSGallery -AllowClobber -Force

                            Write-Host "Installing Az.Accounts"
                            Install-Module Az.Accounts -Repository PSGallery -AllowClobber -Force
                                          
                            Write-Host "Importing Az.Resources"
                            Import-Module Az.Resources -Force

                            Write-Host "Importing Az.Accounts"
                            Import-Module Az.Accounts -Force

                            Write-Host "Changing directory"
                            Set-Location $(Build.SourcesDirectory)/Deployment/Scripts
                            Get-ChildItem

                            Write-Host "Logging into Azure"

                            $azureAplicationId =$env:servicePrincipalId
                            $azureTenantId= $env:tenantId
                            $azurePassword = ConvertTo-SecureString $env:servicePrincipalKey -AsPlainText -Force

                            $psCred = New-Object System.Management.Automation.PSCredential($azureAplicationId , $azurePassword)
                            Connect-AzAccount -Environment AzureUSGovernment -Credential $psCred -TenantId $azureTenantId  -ServicePrincipal 

                            Write-Host "Getting local IP Address"
                            $ipAddress = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content

                            Import-Module .\Set-AppIPRestriction.psm1

                            Write-Host "Setting access restriction for local IP Address"
                            Set-AppIPRestriction -ResourceGroupName ${{ variables.resourceGroupName }} -WebAppName ${{ variables.webAppName }} -IPAddress $ipAddress -RuleName "AllowAdoDeployment" -RuleAction "Allow" -RulePriority "900"
                          }

                      addSpnToEnvironment: true
                      useGlobalConfig: true
                      workingDirectory: "$(ScriptFolder)"

                - task: DownloadPipelineArtifact@2
                  displayName: Download artifact
                  inputs:
                      artifact: drop
                      patterns: "**/*.zip"
                      path: "$(System.ArtifactsDirectory)"

                - task: AzureCLI@2
                  displayName: az cli publish website
                  inputs:
                      azureSubscription: ${{ parameters.azureSubscriptionConnection }}
                      scriptType: ps
                      scriptLocation: inlineScript
                      inlineScript: |
                          az webapp deployment source config-zip --src $(artifactPath) -n $(webAppName) -g $(resourceGroupName)

                - task: AzureCLI@2
                  displayName: "Reset function network ip restrictions"
                  inputs:
                      azureSubscription: ${{ parameters.azureSubscriptionConnection }}
                      scriptType: ps
                      scriptLocation: inlineScript
                      inlineScript: |
                          if ('${{ parameters.environment }}' -eq 'p' -or '${{ parameters.environment }}' -eq 'uat') {
                            $ErrorActionPreference = "Stop"

                            Write-Host "Changing directory"
                            Set-Location $(Build.SourcesDirectory)/Deployment/Scripts
                            Get-ChildItem

                            Write-Host "Importing Remove-ADOIPRestrictions.psm1"
                            Import-Module .\Remove-ADOIPRestrictions.psm1 -Force

                            Write-Host "Removing access restriction for local IP Address"
                            Remove-AdoIPRestrictions -ResourceGroupName ${{ variables.resourceGroupName }} -WebAppName ${{ variables.webAppName }}
                          }

                      addSpnToEnvironment: true
                      useGlobalConfig: true
                      workingDirectory: "$(ScriptFolder)"
                  condition: succeededOrFailed()

