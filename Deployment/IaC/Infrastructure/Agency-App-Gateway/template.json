{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "agency_abbreviation": {
            "type": "String"
        },
        "application": {
            "type": "String"
        },
        "environment": {
            "type": "String"
        },
        "agency_ori": {
            "type": "String"
        },
        "agency_type": {
            "type": "String"
        },
        "owner_name": {
            "type": "String"
        },
        "criticality": {
            "type": "String"
        },
        "data_classification": {
            "type": "String"
        },
        "ag_vnet_subnet_id": {
            "type": "string"
        },
        "ag_private_ip_address": {
            "type": "string"
        },
        "user_tags": {
            "type": "object"
        }
    },
    "variables": {
        "nsg_ag_name": "[concat('nsg-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "nsg_ag_name_ds": "[concat('ds-nsg-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "rt_ag_name": "[concat('rt-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "law-ag-name": "[concat('law-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "sa-ag-name": "[concat('sa', parameters('agency_abbreviation'), 'ag', parameters('environment'), 'shd')]",
        "pip-ag-name": "[concat('pip-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "pip_ag_name_ds": "[concat('ds-pip-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "ag-name": "[concat('ag-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "ag-name-gwip": "[concat('gwip-ag-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "ag_name_ds": "[concat('ds-ag-', parameters('agency_abbreviation'), '-ag-', parameters('environment'), '-shd')]",
        "default_tags": {
            "application_name": "[parameters('application')]",
            "agency": "[if(empty(parameters('agency_abbreviation')), resourceGroup().tags.agency_name, parameters('agency_abbreviation')) ]",
            "agency_ori": "[if(empty(parameters('agency_ori')), resourceGroup().tags.agency_ori, parameters('agency_ori')) ]",
            "business_unit": "[if(empty(parameters('agency_type')), resourceGroup().tags.business_unit, parameters('agency_type')) ]",
            "criticality": "[if(empty(parameters('criticality')), resourceGroup().tags.criticality, parameters('criticality')) ]",
            "data_classification": "[if(empty(parameters('data_classification')), resourceGroup().tags.data_classification, parameters('data_classification')) ]",
            "environment": "[if(empty(parameters('environment')), resourceGroup().tags.environment, parameters('environment')) ]",
            "owner_name": "[if(empty(parameters('owner_name')), resourceGroup().tags.owner_name, parameters('owner_name')) ]"
        },
        "all_tags": "[union(variables('default_tags'), parameters('user_tags'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-07-01",
            "name": "[variables('nsg_ag_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "tags": "[variables('all_tags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AppGatewayInboundFirewallManagement",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('nsg_ag_name'), 'AppGatewayInboundFirewallManagement')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65200-65353",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 4035,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowGatewayManager65200-65535Inbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('nsg_ag_name'), 'AllowGatewayManager65200-65535Inbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65200-65535",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerAnyInbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('nsg_ag_name'), 'AllowAzureLoadBalancerAnyInbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 4065,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/diagnosticSettings",
            "apiVersion": "2021-05-01-preview",
            "name": "[variables('nsg_ag_name_ds')]",
            "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', variables('nsg_ag_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip-ag-name'))]",
                "[resourceId('microsoft.operationalinsights/workspaces', variables('law-ag-name'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('microsoft.operationalinsights/workspaces', variables('law-ag-name'))]",
                "logs": [
                    {
                        "category": "NetworkSecurityGroupEvent",
                        "enabled": true
                    },
                    {
                        "category": "NetworkSecurityGroupRuleCounter",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2022-07-01",
            "name": "[variables('rt_ag_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "tags": "[variables('all_tags')]",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "default-ag-next-hop",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', variables('rt_ag_name'), 'default-ag-next-hop')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "Internet",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2021-12-01-preview",
            "name": "[variables('law-ag-name')]",
            "location": "[resourceGroup().location]",
            "tags": "[variables('all_tags')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[variables('sa-ag-name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('sa-ag-name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('sa-ag-name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-07-01",
            "name": "[variables('pip-ag-name')]",
            "location": "[resourceGroup().location]",
            "tags": "[variables('all_tags')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Insights/diagnosticSettings",
            "apiVersion": "2021-05-01-preview",
            "name": "[variables('pip_ag_name_ds')]",
            "scope": "[format('Microsoft.Network/publicIPAddresses/{0}', variables('pip-ag-name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip-ag-name'))]",
                "[resourceId('microsoft.operationalinsights/workspaces', variables('law-ag-name'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('microsoft.operationalinsights/workspaces', variables('law-ag-name'))]",
                "logs": [
                    {
                        "category": "DDoSProtectionNotifications",
                        "enabled": true
                    },
                    {
                        "category": "DDoSMitigationFlowLogs",
                        "enabled": true
                    },
                    {
                        "category": "DDoSMitigationReports",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": "true"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2022-07-01",
            "name": "[variables('ag-name')]",
            "location": "[resourceGroup().location]",
            // "identity": {
            //     "type": "SystemAssigned"
            // },
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "capacity": 2
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "[variables('ag-name-gwip')]",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/gatewayIPConfigurations/', variables('ag-name-gwip'))]",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('ag_vnet_subnet_id')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [
                    // {
                    //     "type": "Microsoft.Network/applicationGateways/sslCertificates",
                    //     "name": "star-cssa-cloud",
                    //     "id": "/subscriptions/c74e04b6-0cd7-4778-863e-34654eb49270/resourceGroups/rg-sdsd-it-network-dev-001/providers/Microsoft.Network/applicationGateways/ag-sdsd-it-dev-shd-001/sslCertificates/star-cssa-cloud",
                    //     "properties": {
                    //         "keyVaultSecretId": "Succeeded",
                    //         "password": "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",
                    //     }
                    // }
                ],
                "trustedRootCertificates": [],
                "trustedClientCertificates": [],
                "sslProfiles": [],
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(variables('ag-name'), '-public-feip')]",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/frontendIPConfigurations/', variables('ag-name'), '-public-feip')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip-ag-name'))]"
                            }
                        }
                    },
                    {
                        "name": "[concat(variables('ag-name'), '-private-feip')]",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/frontendIPConfigurations/', variables('ag-name'), '-private-feip')]",
                        "properties": {
                            "privateIPAddress": "[parameters('ag_private_ip_address')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[parameters('ag_vnet_subnet_id')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "http-fe-port",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/frontendPorts/http-fe-port')]",
                        "properties": {
                            "port": 80
                        }
                    },
                    {
                        "name": "https-fe-port",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/frontendPorts/https-fe-port')]",
                        "properties": {
                            "port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "default-bep-to-nowhere",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/backendAddressPools/', 'default-bep-to-nowhere'))]",
                        "properties": {
                            "backendAddresses": []
                        }
                    }
                ],
                "loadDistributionPolicies": [],
                "backendHttpSettingsCollection": [
                    {
                        "name": "default-https-bes",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/backendHttpSettingsCollection/default-https-bes'))]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": 60,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/probes/default-https-health-probe')]"
                            }
                        }
                    }
                ],
                "backendSettingsCollection": [],
                "httpListeners": [
                    // {
                    //     "name": "default-private-https-listener",
                    //     "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/httpListeners/default-private-https-listener'))]",
                    //     "properties": {
                    //         "frontendIPConfiguration": {
                    //             "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/frontendIPConfigurations/', variables('ag-name'), '-private-feip')]"
                    //         },
                    //         "frontendPort": {
                    //             "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/frontendPorts/https-fe-port')]"
                    //         },
                    //         "protocol": "Https",
                    //         "sslCertificate": {
                    //             "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/sslCertificates/star-cssa-cloud')]"
                    //         },
                    //         "hostName": "sdsd-dev-ccw-api.cssa.cloud",
                    //         "hostNames": [],
                    //         "requireServerNameIndication": false,
                    //         "customErrorConfigurations": []
                    //     }
                    // },
                    {
                        "name": "default-private-http-listener",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/httpListeners/default-private-http-listener'))]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/frontendIPConfigurations/', variables('ag-name'), '-private-feip')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/frontendPorts/http-fe-port')]"
                            },
                            "protocol": "Http",
                            "hostName": "sdsd-dev-ccw-api.cssa.cloud",
                            "hostNames": [],
                            "requireServerNameIndication": false,
                            "customErrorConfigurations": []
                        }
                    }
                ],
                "listeners": [],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "default-http-rr-to-nowhere",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/requestRoutingRules/default-http-rr-to-nowhere'))]",
                        "properties": {
                            "ruleType": "Basic",
                            "priority": 100,
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/httpListeners/default-private-http-listener'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/backendAddressPools/', 'default-bep-to-nowhere'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/backendHttpSettingsCollection/default-https-bes'))]"
                            }
                        }
                    }
                    // ,
                    // {
                    //     "name": "[concat('reqrt-http-', variables('ag-name'))]",
                    //     "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/requestRoutingRules/reqrt-http-', variables('ag-name')))]",
                    //     "properties": {
                    //         "ruleType": "Basic",
                    //         "priority": 200,
                    //         "httpListener": {
                    //             "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/httpListeners/http-lstnr-', variables('ag-name')))]"
                    //         },
                    //         "redirectConfiguration": {
                    //             "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/redirectConfigurations/redirect-http-to-https')]"
                    //         }
                    //     }
                    // }
                ],
                "routingRules": [],
                "probes": [
                    {
                        "name": "default-https-health-probe",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/probes/default-https-health-probe')]",
                        "properties": {
                            "protocol": "Https",
                            "path": "/health",
                            "interval": 30,
                            "timeout": 10,
                            "unhealthyThreshold": 10,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                                "body": "Healthy",
                                "statusCodes": [
                                    "200-401"
                                ]
                            }
                        }
                    }
                ],
                "rewriteRuleSets": [],
                "redirectConfigurations": [
                    // {
                    //     "name": "redirect-http-to-https",
                    //     "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), '/redirectConfigurations/redirect-http-to-https')]",
                    //     "properties": {
                    //         "redirectType": "Permanent",
                    //         "targetListener": {
                    //             "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/httpListeners/https-lstnr-', variables('ag-name')))]"
                    //         },
                    //         "includePath": true,
                    //         "includeQueryString": true,
                    //         "requestRoutingRules": [
                    //             {
                    //                 "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('ag-name')), concat('/requestRoutingRules/reqrt-http-', variables('ag-name')))]"
                    //             }
                    //         ]
                    //     }
                    // }
                ],
                "privateLinkConfigurations": [],
                "sslPolicy": {
                    "policyType": "Predefined",
                    "policyName": "AppGwSslPolicy20150501"
                },
                "enableHttp2": false,
                "customErrorConfigurations": []
            }
        },
        {
            "type": "Microsoft.Insights/diagnosticSettings",
            "apiVersion": "2021-05-01-preview",
            "name": "[variables('ag_name_ds')]",
            "scope": "[format('Microsoft.Network/applicationGateways/{0}', variables('ag-name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/applicationGateways', variables('ag-name'))]",
                "[resourceId('microsoft.operationalinsights/workspaces', variables('law-ag-name'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('microsoft.operationalinsights/workspaces', variables('law-ag-name'))]",
                "logs": [
                    {
                        "category": "ApplicationGatewayAccessLog",
                        "enabled": true
                    },
                    {
                        "category": "ApplicationGatewayPerformanceLog",
                        "enabled": true
                    },
                    {
                        "category": "ApplicationGatewayFirewallLog",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": "true"
                    }
                ]
            }
        }
    ]
}